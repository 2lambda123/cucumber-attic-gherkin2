!RBIX
0
x
M
1
n
n
x
10
__script__
i
37
5
7
0
64
47
49
1
1
15
99
7
2
65
49
3
2
13
99
12
7
4
12
7
5
12
65
12
49
6
4
15
49
4
0
15
2
11
I
6
I
0
I
0
I
0
n
p
7
s
11
spec_helper
x
7
require
x
7
Gherkin
x
11
open_module
x
15
__module_init__
M
1
n
n
x
7
Gherkin
i
28
5
66
99
7
0
65
49
1
2
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
11
I
6
I
0
I
0
I
0
n
p
5
x
5
Lexer
x
11
open_module
x
15
__module_init__
M
1
n
n
x
5
Lexer
i
13
5
66
5
7
0
64
56
1
47
50
2
1
11
I
3
I
0
I
0
I
0
n
p
3
s
33
a Gherkin lexer lexing py_strings
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
193
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
67
49
2
0
49
3
4
15
5
7
6
64
56
7
47
50
8
1
15
5
7
9
64
56
10
47
50
8
1
15
5
7
11
64
56
12
47
50
8
1
15
5
7
13
64
56
14
47
50
8
1
15
5
7
15
64
56
16
47
50
8
1
15
5
7
17
64
56
18
47
50
8
1
15
5
7
19
64
56
20
47
50
8
1
15
5
7
21
64
56
22
47
50
8
1
15
5
7
23
64
56
24
47
50
8
1
15
5
7
25
64
56
26
47
50
8
1
15
5
7
27
64
56
28
47
50
8
1
15
5
7
29
64
56
30
47
50
8
1
15
5
7
31
64
56
32
47
50
8
1
15
5
7
33
64
56
34
47
50
8
1
15
5
7
35
64
56
36
47
50
8
1
11
I
6
I
0
I
0
I
0
I
-2
p
37
x
4
scan
M
1
n
n
x
4
scan
i
8
39
0
20
0
49
1
1
11
I
3
I
1
I
1
I
1
n
p
2
x
6
@lexer
x
4
scan
p
5
I
0
I
7
I
0
I
8
I
8
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
1
x
7
gherkin
x
17
method_visibility
x
15
add_defn_method
x
2
ps
M
1
n
n
x
2
ps
i
19
7
0
64
7
1
64
20
0
81
2
7
1
64
81
2
49
3
1
11
I
4
I
1
I
1
I
1
n
p
4
s
8
"""%s"""
s
1


x
1
+
x
1
%
p
5
I
0
I
b
I
0
I
c
I
13
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
1
x
7
content
s
77
should provide the amount of indentation of the triple quotes to the listener
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
30
7
0
64
19
0
15
39
1
7
2
49
3
1
7
4
64
4
4
49
5
2
15
5
20
0
47
49
6
1
11
I
5
I
1
I
0
I
0
I
-2
p
7
s
115
Feature: some feature
  Scenario: some scenario
    Given foo
    """
      Hello
    Goodbye
    """
    Then bar

x
9
@listener
x
9
py_string
x
14
should_receive
s
15
  Hello
Goodbye
x
4
with
x
4
scan
p
9
I
0
I
f
I
0
I
10
I
6
I
1a
I
16
I
1b
I
1e
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
1
x
3
str
x
2
it
s
31
should parse a simple py_string
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
29
39
0
7
1
49
2
1
7
3
64
79
49
4
2
15
5
5
7
3
64
47
49
5
1
47
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
9
@listener
x
9
py_string
x
14
should_receive
s
16
I am a py_string
x
4
with
x
2
ps
x
4
scan
p
7
I
0
I
1e
I
0
I
1f
I
f
I
20
I
1d
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
0
s
31
should parse an empty py_string
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
25
39
0
7
1
49
2
1
7
3
64
4
4
49
4
2
15
5
7
5
64
47
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
9
@listener
x
9
py_string
x
14
should_receive
s
0

x
4
with
s
45
Feature: Hi
Scenario: Hi
Given a step
"""
"""
x
4
scan
p
7
I
0
I
23
I
0
I
24
I
10
I
25
I
19
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
0
s
63
should treat a string containing only newlines as only newlines
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
29
7
0
64
19
0
15
39
1
7
2
49
3
1
7
4
64
79
49
5
2
15
5
20
0
47
49
6
1
11
I
5
I
1
I
0
I
0
I
-2
p
7
s
11
"""



"""

x
9
@listener
x
9
py_string
x
14
should_receive
s
2



x
4
with
x
4
scan
p
9
I
0
I
28
I
0
I
29
I
6
I
30
I
15
I
31
I
1d
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
1
x
9
py_string
s
46
should parse content separated by two newlines
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
39
5
5
7
0
64
47
49
1
1
47
49
2
1
15
39
3
49
4
0
49
5
0
7
6
7
0
64
79
35
3
7
7
35
1
35
2
83
8
11
I
5
I
0
I
0
I
0
I
-2
p
9
s
4
A

B
x
2
ps
x
4
scan
x
9
@listener
x
7
to_sexp
x
6
should
x
9
py_string
x
3
eof
x
2
==
p
11
I
0
I
34
I
0
I
35
I
e
I
36
I
16
I
37
I
1e
I
38
I
27
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
0
s
31
should parse a multiline string
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
29
39
0
7
1
49
2
1
7
3
64
79
49
4
2
15
5
5
7
3
64
47
49
5
1
47
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
9
@listener
x
9
py_string
x
14
should_receive
s
7
A
B
C
D
x
4
with
x
2
ps
x
4
scan
p
7
I
0
I
3c
I
0
I
3d
I
f
I
3e
I
1d
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
0
s
59
should ignore unescaped quotes inside the string delimeters
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
29
39
0
7
1
49
2
1
7
3
64
79
49
4
2
15
5
5
7
3
64
47
49
5
1
47
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
9
@listener
x
9
py_string
x
14
should_receive
s
22
What does "this" mean?
x
4
with
x
2
ps
x
4
scan
p
7
I
0
I
41
I
0
I
42
I
f
I
43
I
1d
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
0
s
51
should preserve whitespace within the triple quotes
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
29
7
0
64
19
0
15
39
1
7
2
49
3
1
7
4
64
79
49
5
2
15
5
20
0
47
49
6
1
11
I
5
I
1
I
0
I
0
I
-2
p
7
s
41
    """
      Line one
 Line two
    """

x
9
@listener
x
9
py_string
x
14
should_receive
s
19
  Line one
Line two
x
4
with
x
4
scan
p
9
I
0
I
46
I
0
I
47
I
6
I
4d
I
15
I
4e
I
1d
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
1
x
3
str
s
39
should preserve tabs within the content
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
29
39
0
7
1
49
2
1
7
3
64
79
49
4
2
15
5
5
7
3
64
47
49
5
1
47
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
9
@listener
x
9
py_string
x
14
should_receive
s
36
I have	some tabs
Inside		the content
x
4
with
x
2
ps
x
4
scan
p
7
I
0
I
51
I
0
I
52
I
f
I
53
I
1d
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
0
s
32
should handle complex py_strings
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
33
7
0
64
19
0
15
39
1
7
2
49
3
1
20
0
79
49
4
2
15
5
5
20
0
47
49
5
1
47
49
6
1
11
I
5
I
1
I
0
I
0
I
-2
p
7
s
134
# Feature comment
@one
Feature: Sample

  @two @three
  Scenario: Missing
    Given missing

1 scenario (1 passed)
1 step (1 passed)


x
9
@listener
x
9
py_string
x
14
should_receive
x
4
with
x
2
ps
x
4
scan
p
9
I
0
I
56
I
0
I
57
I
6
I
65
I
14
I
66
I
21
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
1
x
9
py_string
s
61
should allow whitespace after the closing py_string delimiter
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
29
7
0
64
19
0
15
39
1
7
2
49
3
1
7
4
64
79
49
5
2
15
5
20
0
47
49
6
1
11
I
5
I
1
I
0
I
0
I
-2
p
7
s
42
    """
      Line one
    """           

x
9
@listener
x
9
py_string
x
14
should_receive
s
10
  Line one
x
4
with
x
4
scan
p
9
I
0
I
69
I
0
I
6a
I
6
I
6f
I
15
I
70
I
1d
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
1
x
3
str
s
61
should preserve the last newline(s) at the end of a py_string
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
29
7
0
64
19
0
15
39
1
7
2
49
3
1
7
4
64
79
49
5
2
15
5
20
0
47
49
6
1
11
I
5
I
1
I
0
I
0
I
-2
p
7
s
39
     """
     PyString text


     """

x
9
@listener
x
9
py_string
x
14
should_receive
s
15
PyString text


x
4
with
x
4
scan
p
9
I
0
I
73
I
0
I
74
I
6
I
7b
I
15
I
7c
I
1d
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
1
x
3
str
s
39
should preserve CRLFs within py_strings
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
24
39
0
7
1
49
2
1
7
3
64
79
49
4
2
15
5
7
5
64
47
49
6
1
11
I
4
I
0
I
0
I
0
I
-2
p
7
x
9
@listener
x
9
py_string
x
14
should_receive
s
20
Line one
Line two

x
4
with
s
30
"""
Line one
Line two

"""
x
4
scan
p
7
I
0
I
7f
I
0
I
80
I
f
I
81
I
18
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
0
s
37
should unescape escaped triple quotes
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
29
7
0
64
19
0
15
39
1
7
2
49
3
1
7
4
64
79
49
5
2
15
5
20
0
47
49
6
1
11
I
5
I
1
I
0
I
0
I
-2
p
7
s
27
    """
    \"\"\"
    """

x
9
@listener
x
9
py_string
x
14
should_receive
s
3
"""
x
4
with
x
4
scan
p
9
I
0
I
84
I
0
I
85
I
6
I
8a
I
15
I
8b
I
1d
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
1
x
3
str
s
41
should not unescape escaped single quotes
M
1
p
2
x
9
for_block
t
n
x
5
Lexer
i
29
7
0
64
19
0
15
39
1
7
2
49
3
1
7
4
64
79
49
5
2
15
5
20
0
47
49
6
1
11
I
5
I
1
I
0
I
0
I
-2
p
7
s
28
    """
    \" \"\"
    """

x
9
@listener
x
9
py_string
x
14
should_receive
s
7
\" \"\"
x
4
with
x
4
scan
p
9
I
0
I
8e
I
0
I
8f
I
6
I
94
I
15
I
95
I
1d
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
1
x
3
str
p
37
I
0
I
6
I
0
I
7
I
e
I
b
I
1c
I
f
I
27
I
1e
I
32
I
23
I
3d
I
28
I
48
I
34
I
53
I
3c
I
5e
I
41
I
69
I
46
I
74
I
51
I
7f
I
56
I
8a
I
69
I
95
I
73
I
a0
I
7f
I
ab
I
84
I
b6
I
8e
I
c1
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
0
x
19
shared_examples_for
p
3
I
2
I
6
I
d
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
0
x
13
attach_method
p
3
I
2
I
5
I
1c
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
0
x
13
attach_method
p
5
I
0
I
2
I
9
I
4
I
25
x
71
/Users/aslakhellesoy/scm/gherkin/spec/gherkin/shared/py_string_group.rb
p
0
