= gherkin

Fast multi-language Gherkin parser. The goal of this project is to define a grammar for the
Gherkin language, which has evolved out of the Cucumber project. 

Using Ragel, this project can evolve into a general Gherkin parser for all of the programming
languages supported by Ragel (as of this writing C, C++, Objective-C, D, Java, Ruby and C#).

This means a lightning fast parser for Cucumber, but it could also be used in a different BDD
tool.

== Notes

Ragel supports Ruby, but it's much slower than C. The ruby target will be used for development.
The final version will use C for MRI and Java for JRuby.

== Ragel links

I didn't know Ragel when I started on this project. The following links were very helpful:

* http://www.complang.org/ragel/
* http://dev.sipdoc.net/attachments/2/ragel_talk.pdf 
* http://lambda-the-ultimate.org/node/1125
* http://www.zedshaw.com/essays/ragel_state_charts.html
* http://www.devchix.com/2008/01/13/a-hello-world-for-ruby-on-ragel-60/

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but
   bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2009 Aslak Helles√∏y. See LICENSE for details.
