module Cucumber
  module Parser
    # TIP: When you hack on the grammar, just delete feature.rb in this directory.
    # Also make sure you have uninstalled all cucumber gems (don't forget xxx-cucumber
    # github gems).
    #
    # Treetop will then generate the parser in-memory. When you're happy, just generate
    # the rb file with tt feature.tt
    grammar Feature

      rule feature_sub
        white 
        comment 
        white 
        tags 
        white 
        header:(!(scenario_outline / scenario / background) .)* 
        bg:background? 
        feature_elements
        comment? 
      end

      rule tags
        white ts:(tag (space/eol)+)* 
      end

      rule tag
        '@' [^@\r\n\t ]+
      end

      rule comment
        (comment_line white)* 
      end

      rule comment_line
        space* '#' line_to_eol
      end

      rule background
        comment white background_keyword space* name:lines_to_keyword? (eol+ / eof) steps 
      end

      rule feature_elements
        (scenario / scenario_outline)* 
      end

      rule scenario
        comment tags white scenario_keyword space* name:lines_to_keyword white steps white 
      end

      rule scenario_outline
        comment tags white scenario_outline_keyword space* name:lines_to_keyword white steps examples_sections white 
      end

      rule steps
        step* 
      end

      rule step
        comment space* step_keyword keyword_space name:line_to_eol (eol+ / eof) multi:multiline_arg? white 
      end

      rule examples_sections
        examples* 
      end

      rule examples
        comment space* examples_keyword space* name:lines_to_keyword? eol table white 
      end

      rule multiline_arg
        table / py_string
      end

      rule line_to_eol
        (!eol .)*
      end

      rule lines_to_keyword
        (!(eol space* reserved_words_and_symbols) .)* 
      end

      rule reserved_words_and_symbols
        (step_keyword keyword_space) / scenario_keyword / scenario_outline_keyword / table / tag / comment_line
      end

      rule py_string
        open_py_string s:(!close_py_string .)* close_py_string 
      end

      rule open_py_string
        indent:space* '"""' space* eol 
      end

      rule close_py_string
        eol space* quotes:'"""' white 
      end

      rule white
        (space / eol)*
      end
    end
  end
end
