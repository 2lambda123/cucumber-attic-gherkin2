#include <stdio.h>
#include <string.h>
#include <ruby.h>

%%{
  machine feature;
  
  # main := 'say_it' @{ str = rb_str_new2("Mah parser, it haz a C flavr!\n"); };
  
  action begin_content {}
  action begin_pystring {}
  action start_pystring {}
  action start_line {}
  action end_line {}
  action store_feature_content {}
  action store_background_content {}
  action store_scenario_content {}
  action store_scenario_outline_content {}
  action store_examples_content {}
  action store_step_content {}
  action store_comment_content {}
  action store_tag_content {}
  action store_pystring_content {}
  action inc_line_number {}
  action current_line {}
  action last_newline {}
  action start_keyword {}
  action end_keyword {}
  action backup {}
  action end_table {}
  
  include feature_common "feature_common.<%= i18n_language %>.rl"; 
}%%

%% write data;

static VALUE mGherkin;
static VALUE mParser;
static VALUE cFeature;

VALUE Feature_init(VALUE self, VALUE listener)
{
  rb_iv_set(self, "@listener", listener);
  return self;
}

VALUE Feature_scan(VALUE self, VALUE text)
{
  int cs;
  char *p = RSTRING(text)->ptr;
  char *pe = p + strlen(p);
  char *eof = pe;
  VALUE str;
  
  %%{
    write init;
    write exec;
  }%%
  
  return str;
}

void Init_feature() {
  mGherkin = rb_define_module("Gherkin");
  mParser = rb_define_module_under(mGherkin, "Parser");
  cFeature = rb_define_class_under(mParser, "Feature", rb_cObject);
  
  rb_define_method(cFeature, "initialize", Feature_init, 1);
  rb_define_method(cFeature, "scan", Feature_scan, 1);
}
